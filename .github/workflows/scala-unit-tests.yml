name: Cashew Unit and Integration Tests

on:
  push:
    branches-ignore:
      - main

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11 # Specify the Java version required for your project
          distribution: 'adopt'

      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.m2
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Install Dependencies
        run: sbt update

      - name: Run Unit Tests
        run: sbt test

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: shared_user
          POSTGRES_PASSWORD: share
          POSTGRES_DB: shared_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U shared_user -d shared_test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Cache SBT
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.m2
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            ${{ runner.os }}-sbt-

      - name: Install Dependencies
        run: sbt update

      - name: Wait for PostgreSQL
        env:
          PGPASSWORD: share
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U shared_user; then
              echo "Postgres is ready";
              break;
            fi
            echo "Waiting for Postgres...";
            sleep 1;
          done

      - name: Reset Database
        env:
          PGPASSWORD: share
        run: |
          psql -h localhost -U shared_user -d postgres -c "DROP DATABASE IF EXISTS shared_test_db;"
          psql -h localhost -U shared_user -d postgres -c "CREATE DATABASE shared_test_db;"
        
      - name: Run Integration Tests
        run: sbt it/test

        